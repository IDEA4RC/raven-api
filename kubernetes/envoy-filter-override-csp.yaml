apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: override-csp-header
  namespace: default
spec:
  workloadSelector:
    labels:
      istio: ingressgateway
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: GATEWAY
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.lua
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
          inline_code: |
            function envoy_on_response(response_handle)
              -- Aplicar a todas las rutas del frontend (no solo específicas)
              local path = response_handle:headers():get(":path")
              
              -- Eliminar TODAS las variaciones de CSP existentes
              response_handle:headers():remove("content-security-policy")
              response_handle:headers():remove("Content-Security-Policy")
              response_handle:headers():remove("CONTENT-SECURITY-POLICY")
              
              -- Forzar eliminación usando un bucle para asegurar que se eliminen todas
              local headers = response_handle:headers()
              for k, v in pairs(headers) do
                if string.lower(k) == "content-security-policy" then
                  headers:remove(k)
                end
              end
              
              -- Añadir nuestra CSP permisiva solo UNA vez
              response_handle:headers():add("Content-Security-Policy", "default-src * 'unsafe-inline' 'unsafe-eval' data: blob:; frame-src *; connect-src *; font-src *; style-src * 'unsafe-inline'; img-src *; script-src * 'unsafe-inline' 'unsafe-eval';")
            end
